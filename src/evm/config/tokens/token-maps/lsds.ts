import type { EvmCurrency } from '../../../../evm/currency/currency.js'
import { EvmChainId } from '../../../chain/chains.js'
import {
  METH,
  rETH,
  STONE,
  WstETH,
} from '../../../config/tokens/tokens/index.js'
import { EvmToken } from '../../../currency/token.js'

export const LSDS = {
  [EvmChainId.ARBITRUM]: [
    new EvmToken({
      chainId: EvmChainId.ARBITRUM,
      address: '0x5979d7b546e38e414f7e9822514be443a4800529',
      decimals: 18,
      symbol: 'wstETH',
      name: 'Wrapped Lido Staked ETH',
    }),
    new EvmToken({
      chainId: EvmChainId.ARBITRUM,
      address: '0x178412e79c25968a32e89b11f63b33f733770c2a',
      decimals: 18,
      symbol: 'frxETH',
      name: 'Frax Ether',
    }),
    new EvmToken({
      chainId: EvmChainId.ARBITRUM,
      address: '0x95ab45875cffdba1e5f451b950bc2e42c0053f39',
      decimals: 18,
      symbol: 'sfrxETH',
      name: 'Staked Frax Ether',
    }),
    rETH[EvmChainId.ARBITRUM],
    new EvmToken({
      chainId: EvmChainId.ARBITRUM,
      address: '0x1debd73e752beaf79865fd6446b0c970eae7732f',
      decimals: 18,
      symbol: 'cbETH',
      name: 'Coinbase cbETH',
    }),
    new EvmToken({
      chainId: EvmChainId.ARBITRUM,
      address: '0x2416092f143378750bb29b79ed961ab195cceea5',
      decimals: 18,
      symbol: 'ezETH',
      name: 'Renzo Restaked ETH',
    }),
    new EvmToken({
      chainId: EvmChainId.ARBITRUM,
      address: '0x35751007a407ca6feffe80b3cb397736d2cf4dbe',
      decimals: 18,
      symbol: 'weETH',
      name: 'Wrapped eETH',
    }),
  ],
  [EvmChainId.ARBITRUM_NOVA]: [],
  [EvmChainId.AVALANCHE]: [],
  [EvmChainId.BASE]: [
    new EvmToken({
      chainId: EvmChainId.BASE,
      address: '0xb6fe221fe9eef5aba221c348ba20a1bf5e73624c',
      decimals: 18,
      symbol: 'wstETH',
      name: 'Wrapped Lido Staked ETH',
    }),
    rETH[EvmChainId.BASE],
    new EvmToken({
      chainId: EvmChainId.BASE,
      address: '0x2ae3f1ec7f1f5012cfeab0185bfc7aa3cf0dec22',
      decimals: 18,
      symbol: 'cbETH',
      name: 'Coinbase cbETH',
    }),
    new EvmToken({
      chainId: EvmChainId.BASE,
      address: '0x2416092f143378750bb29b79ed961ab195cceea5',
      decimals: 18,
      symbol: 'ezETH',
      name: 'Renzo Restaked ETH',
    }),
    new EvmToken({
      chainId: EvmChainId.BASE,
      address: '0x04c0599ae5a44757c0af6f9ec3b93da8976c150a',
      decimals: 18,
      symbol: 'weETH',
      name: 'Wrapped eETH',
    }),
  ],
  [EvmChainId.BLAST]: [
    new EvmToken({
      chainId: EvmChainId.BLAST,
      address: '0x2416092f143378750bb29b79ed961ab195cceea5',
      decimals: 18,
      symbol: 'ezETH',
      name: 'Renzo Restaked ETH',
    }),
    new EvmToken({
      chainId: EvmChainId.BLAST,
      address: '0x04c0599ae5a44757c0af6f9ec3b93da8976c150a',
      decimals: 18,
      symbol: 'weETH',
      name: 'Wrapped eETH',
    }),
  ],
  [EvmChainId.BOBA]: [],
  [EvmChainId.BOBA_BNB]: [],
  [EvmChainId.BSC]: [
    new EvmToken({
      chainId: EvmChainId.BSC,
      address: '0x64048a7eecf3a2f1ba9e144aac3d7db6e58f555e',
      decimals: 18,
      symbol: 'frxETH',
      name: 'Frax Ether',
    }),
    new EvmToken({
      chainId: EvmChainId.BSC,
      address: '0x3cd55356433c89e50dc51ab07ee0fa0a95623d53',
      decimals: 18,
      symbol: 'sfrxETH',
      name: 'Staked Frax Ether',
    }),
    new EvmToken({
      chainId: EvmChainId.BSC,
      address: '0x2416092f143378750bb29b79ed961ab195cceea5',
      decimals: 18,
      symbol: 'ezETH',
      name: 'Renzo Restaked ETH',
    }),
    new EvmToken({
      chainId: EvmChainId.BSC,
      address: '0x04c0599ae5a44757c0af6f9ec3b93da8976c150a',
      decimals: 18,
      symbol: 'weETH',
      name: 'Wrapped eETH',
    }),
  ],
  [EvmChainId.BTTC]: [],
  [EvmChainId.CELO]: [],
  [EvmChainId.ETHEREUM]: [
    METH[EvmChainId.ETHEREUM],
    new EvmToken({
      chainId: EvmChainId.ETHEREUM,
      address: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84',
      decimals: 18,
      symbol: 'stETH',
      name: 'Lido Staked ETH',
    }),
    new EvmToken({
      chainId: EvmChainId.ETHEREUM,
      address: '0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0',
      decimals: 18,
      symbol: 'wstETH',
      name: 'Wrapped Lido Staked ETH',
    }),
    rETH[EvmChainId.ETHEREUM],
    new EvmToken({
      chainId: EvmChainId.ETHEREUM,
      address: '0x35fa164735182de50811e8e2e824cfb9b6118ac2',
      decimals: 18,
      symbol: 'eETH',
      name: 'ether.fi ETH',
    }),
    new EvmToken({
      chainId: EvmChainId.ETHEREUM,
      address: '0xcd5fe23c85820f7b72d0926fc9b05b43e359b7ee',
      decimals: 18,
      symbol: 'weETH',
      name: 'Wrapped eETH',
    }),
    new EvmToken({
      chainId: EvmChainId.ETHEREUM,
      address: '0xbe9895146f7af43049ca1c1ae358b0541ea49704',
      decimals: 18,
      symbol: 'cbETH',
      name: 'Coinbase cbETH',
    }),
    new EvmToken({
      chainId: EvmChainId.ETHEREUM,
      address: '0xf951e335afb289353dc249e82926178eac7ded78',
      decimals: 18,
      symbol: 'swETH',
      name: 'Swell swETH',
    }),
    new EvmToken({
      chainId: EvmChainId.ETHEREUM,
      address: '0x5e8422345238f34275888049021821e8e08caa1f',
      decimals: 18,
      symbol: 'frxETH',
      name: 'Frax Ether',
    }),
    new EvmToken({
      chainId: EvmChainId.ETHEREUM,
      address: '0xac3e018457b222d93114458476f3e3416abbe38f',
      decimals: 18,
      symbol: 'sfrxETH',
      name: 'Staked Frax Ether',
    }),
    new EvmToken({
      chainId: EvmChainId.ETHEREUM,
      address: '0xa35b1b31ce002fbf2058d22f30f95d405200a15b',
      decimals: 18,
      symbol: 'ETHx',
      name: 'Stader ETHx',
    }),
    new EvmToken({
      chainId: EvmChainId.ETHEREUM,
      address: '0x2416092f143378750bb29b79ed961ab195cceea5',
      decimals: 18,
      symbol: 'ezETH',
      name: 'Renzo Restaked ETH',
    }),
  ],
  [EvmChainId.FANTOM]: [
    new EvmToken({
      chainId: EvmChainId.FANTOM,
      address: '0x9e73f99ee061c8807f69f9c6ccc44ea3d8c373ee',
      decimals: 18,
      symbol: 'frxETH',
      name: 'Frax Ether',
    }),
    new EvmToken({
      chainId: EvmChainId.FANTOM,
      address: '0xb90ccd563918ff900928dc529aa01046795ccb4a',
      decimals: 18,
      symbol: 'sfrxETH',
      name: 'Staked Frax Ether',
    }),
  ],
  [EvmChainId.FILECOIN]: [],
  [EvmChainId.GNOSIS]: [],
  [EvmChainId.HARMONY]: [],
  [EvmChainId.HAQQ]: [],
  [EvmChainId.KAVA]: [],
  [EvmChainId.LINEA]: [
    new EvmToken({
      chainId: EvmChainId.LINEA,
      address: '0x2416092f143378750bb29b79ed961ab195cceea5',
      decimals: 18,
      symbol: 'ezETH',
      name: 'Renzo Restaked ETH',
    }),
    new EvmToken({
      chainId: EvmChainId.LINEA,
      address: '0x1bf74c010e6320bab11e2e5a532b5ac15e0b8aa6',
      decimals: 18,
      symbol: 'weETH',
      name: 'Wrapped eETH',
    }),
  ],
  [EvmChainId.METIS]: [],
  [EvmChainId.OPTIMISM]: [
    new EvmToken({
      chainId: EvmChainId.OPTIMISM,
      address: '0x1f32b1c2345538c0c6f582fcb022739c4a194ebb',
      decimals: 18,
      symbol: 'wstETH',
      name: 'Wrapped Lido Staked ETH',
    }),
    new EvmToken({
      chainId: EvmChainId.OPTIMISM,
      address: '0x6806411765af15bddd26f8f544a34cc40cb9838b',
      decimals: 18,
      symbol: 'frxETH',
      name: 'Frax Ether',
    }),
    new EvmToken({
      chainId: EvmChainId.OPTIMISM,
      address: '0x484c2d6e3cdd945a8b2df735e079178c1036578c',
      decimals: 18,
      symbol: 'sfrxETH',
      name: 'Staked Frax Ether',
    }),
    rETH[EvmChainId.OPTIMISM],
    new EvmToken({
      chainId: EvmChainId.OPTIMISM,
      address: '0xaddb6a0412de1ba0f936dcaeb8aaa24578dcf3b2',
      decimals: 18,
      symbol: 'cbETH',
      name: 'Coinbase cbETH',
    }),
    new EvmToken({
      chainId: EvmChainId.OPTIMISM,
      address: '0x5a7facb970d094b6c7ff1df0ea68d99e6e73cbff',
      decimals: 18,
      symbol: 'weETH',
      name: 'Wrapped eETH',
    }),
  ],
  [EvmChainId.POLYGON]: [
    new EvmToken({
      chainId: EvmChainId.POLYGON,
      address: '0xee327f889d5947c1dc1934bb208a1e792f953e96',
      decimals: 18,
      symbol: 'frxETH',
      name: 'Frax Ether',
    }),
    new EvmToken({
      chainId: EvmChainId.POLYGON,
      address: '0x6d1fdbb266fcc09a16a22016369210a15bb95761',
      decimals: 18,
      symbol: 'sfrxETH',
      name: 'Staked Frax Ether',
    }),
    rETH[EvmChainId.POLYGON],
  ],
  [EvmChainId.POLYGON_ZKEVM]: [rETH[EvmChainId.POLYGON_ZKEVM]],
  [EvmChainId.SCROLL]: [
    new EvmToken({
      chainId: EvmChainId.SCROLL,
      address: '0xf610a9dfb7c89644979b4a0f27063e9e7d7cda32',
      decimals: 18,
      symbol: 'wstETH',
      name: 'Wrapped Lido Staked ETH',
    }),
    rETH[EvmChainId.SCROLL],
    new EvmToken({
      chainId: EvmChainId.SCROLL,
      address: '0x01f0a31698c4d065659b9bdc21b3610292a1c506',
      decimals: 18,
      symbol: 'weETH',
      name: 'Wrapped eETH',
    }),
  ],
  [EvmChainId.THUNDERCORE]: [],
  [EvmChainId.CORE]: [],
  [EvmChainId.ZETACHAIN]: [],
  [EvmChainId.CRONOS]: [],
  [EvmChainId.SKALE_EUROPA]: [rETH[EvmChainId.SKALE_EUROPA]],
  [EvmChainId.ROOTSTOCK]: [],
  [EvmChainId.ZKSYNC_ERA]: [],
  [EvmChainId.MANTLE]: [METH[EvmChainId.MANTLE]],
  [EvmChainId.MANTA]: [STONE[EvmChainId.MANTA]],
  [EvmChainId.MODE]: [
    new EvmToken({
      chainId: EvmChainId.MODE,
      address: '0x2416092f143378750bb29b79ed961ab195cceea5',
      decimals: 18,
      symbol: 'ezETH',
      name: 'Renzo Restaked ETH',
    }),
    new EvmToken({
      chainId: EvmChainId.MODE,
      address: '0x04c0599ae5a44757c0af6f9ec3b93da8976c150a',
      decimals: 18,
      symbol: 'weETH',
      name: 'Wrapped eETH',
    }),
  ],
  [EvmChainId.TAIKO]: [],
  [EvmChainId.ZKLINK]: [],
  [EvmChainId.APE]: [],
  [EvmChainId.SONIC]: [],
  [EvmChainId.HEMI]: [],
  [EvmChainId.KATANA]: [
    WstETH[EvmChainId.KATANA],
    new EvmToken({
      chainId: EvmChainId.KATANA,
      address: '0x9893989433e7a383cb313953e4c2365107dc19a7',
      decimals: 18,
      symbol: 'weETH',
      name: 'Wrapped eETH',
    }),
  ],
  [EvmChainId.HYPEREVM]: [],
  [EvmChainId.BERACHAIN]: [],
  [EvmChainId.PLASMA]: [],
  [EvmChainId.FUSE]: [],

  // TESTNETS
  [EvmChainId.ARBITRUM_SEPOLIA]: [],
  [EvmChainId.SEPOLIA]: [],
  [EvmChainId.TATARA]: [],
} as const satisfies Record<EvmChainId, EvmToken[]>

export function isLsd(currency: EvmCurrency): boolean {
  if (currency.type === 'native') {
    return false
  }

  return LSDS[currency.chainId]?.some(
    (lsd) => lsd.address.toLowerCase() === currency.address.toLowerCase(),
  )
}
