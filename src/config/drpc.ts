import { EvmChainId } from '../chain/index.js'

export const DRPC_CHAIN_IDS = [
  EvmChainId.APE,
  EvmChainId.ARBITRUM,
  EvmChainId.ARBITRUM_NOVA,
  EvmChainId.AVALANCHE,
  EvmChainId.BASE,
  EvmChainId.BLAST,
  EvmChainId.BOBA,
  EvmChainId.BOBA_BNB,
  EvmChainId.BSC,
  EvmChainId.CELO,
  EvmChainId.CORE,
  EvmChainId.CRONOS,
  EvmChainId.ETHEREUM,
  EvmChainId.FANTOM,
  EvmChainId.FILECOIN,
  EvmChainId.FUSE,
  EvmChainId.GNOSIS,
  EvmChainId.HAQQ,
  EvmChainId.HARMONY,
  EvmChainId.KAVA,
  EvmChainId.LINEA,
  EvmChainId.MANTA,
  EvmChainId.MANTLE,
  EvmChainId.METIS,
  EvmChainId.MODE,
  EvmChainId.MOONBEAM,
  EvmChainId.MOONRIVER,
  EvmChainId.OPTIMISM,
  EvmChainId.POLYGON,
  EvmChainId.POLYGON_ZKEVM,
  EvmChainId.ROOTSTOCK,
  EvmChainId.SCROLL,
  EvmChainId.SONIC,
  EvmChainId.TAIKO,
  EvmChainId.TELOS,
  EvmChainId.THUNDERCORE,
  EvmChainId.ZETACHAIN,
  EvmChainId.ZKSYNC_ERA,
] as const

export type DrpcChainId = (typeof DRPC_CHAIN_IDS)[number]

export const isDrpcChainId = (chainId: EvmChainId): chainId is DrpcChainId =>
  DRPC_CHAIN_IDS.includes(chainId as DrpcChainId)

const drpcNetworkMapping = {
  [EvmChainId.APE]: 'apechain',
  [EvmChainId.ARBITRUM]: 'arbitrum',
  [EvmChainId.ARBITRUM_NOVA]: 'arbitrum-nova',
  [EvmChainId.AVALANCHE]: 'avalanche',
  [EvmChainId.BASE]: 'base',
  [EvmChainId.BLAST]: 'blast',
  [EvmChainId.BOBA]: 'boba-eth',
  [EvmChainId.BOBA_BNB]: 'boba-bnb',
  [EvmChainId.BSC]: 'bsc',
  [EvmChainId.CELO]: 'celo',
  [EvmChainId.CORE]: 'core',
  [EvmChainId.CRONOS]: 'cronos',
  [EvmChainId.ETHEREUM]: 'ethereum',
  [EvmChainId.FANTOM]: 'fantom',
  [EvmChainId.FILECOIN]: 'filecoin',
  [EvmChainId.FUSE]: 'fuse',
  [EvmChainId.GNOSIS]: 'gnosis',
  [EvmChainId.HAQQ]: 'haqq',
  [EvmChainId.HARMONY]: 'harmony-0',
  [EvmChainId.KAVA]: 'kava',
  [EvmChainId.LINEA]: 'linea',
  [EvmChainId.MANTA]: 'manta-pacific',
  [EvmChainId.MANTLE]: 'mantle',
  [EvmChainId.METIS]: 'metis',
  [EvmChainId.MODE]: 'mode',
  [EvmChainId.MOONBEAM]: 'moonbeam',
  [EvmChainId.MOONRIVER]: 'moonriver',
  [EvmChainId.OPTIMISM]: 'optimism',
  [EvmChainId.POLYGON]: 'polygon',
  [EvmChainId.POLYGON_ZKEVM]: 'polygon-zkevm',
  [EvmChainId.ROOTSTOCK]: 'rootstock',
  [EvmChainId.SCROLL]: 'scroll',
  [EvmChainId.SONIC]: 'sonic',
  [EvmChainId.TAIKO]: 'taiko',
  [EvmChainId.TELOS]: 'telos',
  [EvmChainId.THUNDERCORE]: 'thundercore',
  [EvmChainId.ZETACHAIN]: 'zeta-chain',
  [EvmChainId.ZKSYNC_ERA]: 'zksync',
} as const satisfies Record<DrpcChainId, string>

export const getDrpcRpcUrl = ({
  chainId,
  key,
  subdomain = 'lb',
}: { chainId: DrpcChainId; key: string; subdomain?: 'lb' | 'direct' }) => {
  return `https://${subdomain}.drpc.org/ogrpc?network=${drpcNetworkMapping[chainId]}&dkey=${key}`
}
