import { EvmChainId } from '../../chain/evm/index.js'
import {
  AERO,
  APE_ETH,
  APE_USD,
  CRV_USD,
  DOC,
  GUSD,
  METH,
  MUSD,
  SKL,
  STETH,
  STONE,
  THREE_CRV,
  Token,
  USDB,
  USDP,
  WstETH,
} from '../../currency/index.js'
import {
  AAVE,
  BUSD,
  DAI,
  FRAX,
  LINK,
  LUSD,
  MATIC,
  MIM,
  OHM,
  OP,
  QUICK,
  SUSHI,
  USDC,
  USDT,
  WBTC,
  WETH9,
  WNATIVE,
  WORMHOLE_USDC,
  WORMHOLE_WBTC,
  WORMHOLE_WETH,
  ZETA_BSC_BRIDGE_USDC,
  ZETA_BSC_BRIDGE_USDT,
  ZETA_ETH_BRIDGE_USDC,
  ZETA_ETH_BRIDGE_USDT,
  axlETH,
  axlUSDC,
  axlWBTC,
} from '../../currency/index.js'
import {
  STARGATE_USDC,
  STARGATE_USDT,
  STARGATE_WBTC,
  STARGATE_WETH,
} from '../features/stargate.js'

export const BASES_TO_CHECK_TRADES_AGAINST: {
  readonly [chainId: number]: Token[]
} = {
  [EvmChainId.ETHEREUM]: [
    WNATIVE[EvmChainId.ETHEREUM],
    WBTC[EvmChainId.ETHEREUM],
    USDC[EvmChainId.ETHEREUM],
    USDT[EvmChainId.ETHEREUM],
    DAI[EvmChainId.ETHEREUM],
    MIM[EvmChainId.ETHEREUM],
    FRAX[EvmChainId.ETHEREUM],
    OHM[EvmChainId.ETHEREUM],
    LINK[EvmChainId.ETHEREUM],
    SUSHI[EvmChainId.ETHEREUM],
    WstETH[EvmChainId.ETHEREUM],
    STETH,
    THREE_CRV,
    GUSD,
    LUSD[EvmChainId.ETHEREUM],
    CRV_USD,
    new Token({
      chainId: EvmChainId.ETHEREUM,
      address: '0xA0b73E1Ff0B80914AB6fe0444E65848C4C34450b',
      symbol: 'CRO',
      name: 'CRO',
      decimals: 8,
    }),
  ],
  [EvmChainId.GÖRLI]: [WNATIVE[EvmChainId.GÖRLI]],
  // [EvmChainId.RINKEBY]: [WNATIVE[EvmChainId.RINKEBY], USDC[EvmChainId.RINKEBY]],
  // [EvmChainId.KOVAN]: [WNATIVE[EvmChainId.KOVAN], USDC[EvmChainId.KOVAN]],
  [EvmChainId.POLYGON]: [
    WNATIVE[EvmChainId.POLYGON],
    WETH9[EvmChainId.POLYGON],
    WBTC[EvmChainId.POLYGON],
    USDC[EvmChainId.POLYGON],
    USDT[EvmChainId.POLYGON],
    DAI[EvmChainId.POLYGON],
    FRAX[EvmChainId.POLYGON],
    QUICK[EvmChainId.POLYGON],
    LINK[EvmChainId.POLYGON],
    AAVE[EvmChainId.POLYGON],
    new Token({
      address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',
      chainId: EvmChainId.POLYGON,
      decimals: 6,
      symbol: 'USD Coin',
      name: 'USDC.e',
    }),
  ],
  [EvmChainId.POLYGON_TESTNET]: [
    WNATIVE[EvmChainId.POLYGON_TESTNET],
    USDC[EvmChainId.POLYGON_TESTNET],
  ],
  [EvmChainId.FANTOM]: [
    WNATIVE[EvmChainId.FANTOM],
    STARGATE_USDC[EvmChainId.FANTOM],
    STARGATE_USDT[EvmChainId.FANTOM],
    STARGATE_WETH[EvmChainId.FANTOM],
    STARGATE_WBTC[EvmChainId.FANTOM],
    axlUSDC[EvmChainId.FANTOM],
    MIM[EvmChainId.FANTOM],
  ],
  [EvmChainId.GNOSIS]: [
    WNATIVE[EvmChainId.GNOSIS],
    WETH9[EvmChainId.GNOSIS],
    USDC[EvmChainId.GNOSIS],
    USDT[EvmChainId.GNOSIS],
    WstETH[EvmChainId.GNOSIS], // #3 token for other projects
    new Token({
      chainId: EvmChainId.GNOSIS,
      address: '0x9C58BAcC331c9aa871AFD802DB6379a98e80CEdb',
      decimals: 18,
      symbol: 'GNO',
      name: 'Gnosis',
    }),
    new Token({
      // #2 token for other projects
      chainId: EvmChainId.GNOSIS,
      address: '0xaf204776c7245bF4147c2612BF6e5972Ee483701',
      decimals: 18,
      symbol: 'sDAI',
      name: 'Savings xDAI',
    }),
  ],
  [EvmChainId.BSC]: [
    WNATIVE[EvmChainId.BSC],
    WETH9[EvmChainId.BSC],
    USDC[EvmChainId.BSC],
    USDT[EvmChainId.BSC],
    DAI[EvmChainId.BSC],
    BUSD[EvmChainId.BSC],
    new Token({
      chainId: EvmChainId.BSC,
      address: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',
      decimals: 18,
      symbol: 'BTCB',
      name: 'Binance-Peg BTCB Token',
    }),
    new Token({
      chainId: EvmChainId.BSC,
      address: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',
      decimals: 18,
      symbol: 'Cake',
      name: 'PancakeSwap Token',
    }),
  ],
  [EvmChainId.ARBITRUM]: [
    WNATIVE[EvmChainId.ARBITRUM],
    WBTC[EvmChainId.ARBITRUM],
    USDC[EvmChainId.ARBITRUM],
    USDT[EvmChainId.ARBITRUM],
    DAI[EvmChainId.ARBITRUM],
    FRAX[EvmChainId.ARBITRUM],
    LINK[EvmChainId.ARBITRUM],
    WstETH[EvmChainId.ARBITRUM], // #5 for us, #6 for other projects
    new Token({
      chainId: EvmChainId.ARBITRUM,
      address: '0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8',
      decimals: 6,
      symbol: 'USDC.e',
      name: 'Bridged USDC (Arb1)',
    }),
    new Token({
      chainId: EvmChainId.ARBITRUM,
      address: '0x912CE59144191C1204E64559FE8253a0e49E6548',
      decimals: 18,
      symbol: 'ARB',
      name: 'Arbitrum',
    }),
    new Token({
      chainId: EvmChainId.ARBITRUM,
      address: '0x539bdE0d7Dbd336b79148AA742883198BBF60342',
      decimals: 18,
      symbol: 'MAGIC',
      name: 'MAGIC',
    }),
    new Token({
      chainId: EvmChainId.ARBITRUM,
      address: '0x8D9bA570D6cb60C7e3e0F31343Efe75AB8E65FB1',
      decimals: 18,
      symbol: 'gOHM',
      name: 'Governance OHM',
    }),
  ],
  [EvmChainId.ARBITRUM_NOVA]: [
    WNATIVE[EvmChainId.ARBITRUM_NOVA],
    WBTC[EvmChainId.ARBITRUM_NOVA],
    USDC[EvmChainId.ARBITRUM_NOVA],
    USDT[EvmChainId.ARBITRUM_NOVA],
    DAI[EvmChainId.ARBITRUM_NOVA],
    new Token({
      chainId: EvmChainId.ARBITRUM_NOVA,
      address: '0xf823C3cD3CeBE0a1fA952ba88Dc9EEf8e0Bf46AD',
      decimals: 18,
      symbol: 'ARB',
      name: 'Arbitrum',
    }),
    SUSHI[EvmChainId.ARBITRUM_NOVA],
  ],
  [EvmChainId.AVALANCHE]: [
    WNATIVE[EvmChainId.AVALANCHE],
    WETH9[EvmChainId.AVALANCHE],
    WBTC[EvmChainId.AVALANCHE],
    USDC[EvmChainId.AVALANCHE],
    new Token({
      chainId: EvmChainId.AVALANCHE,
      address: '0xA7D7079b0FEaD91F3e65f86E8915Cb59c1a4C664',
      decimals: 6,
      symbol: 'USDC.e',
      name: 'USD Coin',
    }),
    new Token({
      // #4 token for other projects
      chainId: EvmChainId.AVALANCHE,
      address: '0x152b9d0FdC40C096757F570A51E494bd4b943E50',
      decimals: 8,
      symbol: 'BTC.b',
      name: 'USD Coin',
    }),
    new Token({
      // #7 token for other projects
      chainId: EvmChainId.AVALANCHE,
      address: '0x2b2C81e08f1Af8835a78Bb2A90AE924ACE0eA4bE',
      decimals: 18,
      symbol: 'sAVAX',
      name: 'Staked AVAX',
    }),
    USDT[EvmChainId.AVALANCHE],
    new Token({
      chainId: EvmChainId.AVALANCHE,
      address: '0xc7198437980c041c805A1EDcbA50c1Ce5db95118',
      decimals: 6,
      symbol: 'USDT.e',
      name: 'Tether USD',
    }),
    new Token({
      chainId: EvmChainId.AVALANCHE,
      address: '0xd586E7F844cEa2F87f50152665BCbc2C279D8d70',
      decimals: 18,
      symbol: 'DAI.e',
      name: 'Dai Stablecoin',
    }),
    MIM[EvmChainId.AVALANCHE],
    new Token({
      chainId: EvmChainId.AVALANCHE,
      address: '0x0da67235dD5787D67955420C84ca1cEcd4E5Bb3b',
      decimals: 18,
      name: 'Wrapped MEMO',
      symbol: 'WMEMO',
    }),
  ],

  [EvmChainId.HECO]: [
    WNATIVE[EvmChainId.HECO],
    USDC[EvmChainId.HECO],
    USDT[EvmChainId.HECO],
    DAI[EvmChainId.HECO],
  ],
  [EvmChainId.HARMONY]: [
    WNATIVE[EvmChainId.HARMONY],
    USDC[EvmChainId.HARMONY],
    USDT[EvmChainId.HARMONY],
    DAI[EvmChainId.HARMONY],
    FRAX[EvmChainId.HARMONY],
  ],
  [EvmChainId.OKEX]: [
    WNATIVE[EvmChainId.OKEX],
    USDC[EvmChainId.OKEX],
    USDT[EvmChainId.OKEX],
    DAI[EvmChainId.OKEX],
  ],
  [EvmChainId.CELO]: [
    WNATIVE[EvmChainId.CELO],
    WETH9[EvmChainId.CELO],
    WBTC[EvmChainId.CELO],
    USDC[EvmChainId.CELO],
    USDT[EvmChainId.CELO],
    DAI[EvmChainId.CELO],
    new Token({
      chainId: EvmChainId.CELO,
      address: '0xD8763CBa276a3738E6DE85b4b3bF5FDed6D6cA73',
      decimals: 18,
      symbol: 'cEUR',
      name: 'Celo Euro',
    }),
    new Token({
      chainId: EvmChainId.CELO,
      address: '0x765DE816845861e75A25fCA122bb6898B8B1282a',
      decimals: 18,
      symbol: 'cUSD',
      name: 'Celo Dollar',
    }),
    new Token({
      chainId: EvmChainId.CELO,
      address: '0x2DEf4285787d58a2f811AF24755A8150622f4361',
      decimals: 18,
      symbol: 'cETH',
      name: 'Celo Ether',
    }),
    new Token({
      chainId: EvmChainId.CELO,
      address: '0x66803FB87aBd4aaC3cbB3fAd7C3aa01f6F3FB207',
      decimals: 18,
      symbol: 'WETH',
      name: 'Wrapped Ether (Wormhole)',
    }),
  ],
  [EvmChainId.PALM]: [WNATIVE[EvmChainId.PALM]],
  [EvmChainId.MOONRIVER]: [
    WNATIVE[EvmChainId.MOONRIVER],
    USDC[EvmChainId.MOONRIVER],
    USDT[EvmChainId.MOONRIVER],
    DAI[EvmChainId.MOONRIVER],
    MIM[EvmChainId.MOONRIVER],
    FRAX[EvmChainId.MOONRIVER],
  ],
  [EvmChainId.FUSE]: [
    WNATIVE[EvmChainId.FUSE],
    USDC[EvmChainId.FUSE],
    USDT[EvmChainId.FUSE],
    DAI[EvmChainId.FUSE],
  ],
  [EvmChainId.TELOS]: [
    WNATIVE[EvmChainId.TELOS],
    USDC[EvmChainId.TELOS],
    USDT[EvmChainId.TELOS],
  ],
  [EvmChainId.MOONBEAM]: [
    WNATIVE[EvmChainId.MOONBEAM],
    axlUSDC[EvmChainId.MOONBEAM],
    WORMHOLE_USDC[EvmChainId.MOONBEAM],
    WORMHOLE_WETH[EvmChainId.MOONBEAM],
    WORMHOLE_WBTC[EvmChainId.MOONBEAM],
    FRAX[EvmChainId.MOONBEAM],
    new Token({
      chainId: EvmChainId.MOONBEAM,
      address: '0xFFfffffF7D2B0B761Af01Ca8e25242976ac0aD7D',
      decimals: 6,
      name: 'USD Coin',
      symbol: 'xcUSDC',
    }),
    new Token({
      chainId: EvmChainId.MOONBEAM,
      address: '0xFFFFFFfFea09FB06d082fd1275CD48b191cbCD1d',
      decimals: 6,
      name: 'Tether USD',
      symbol: 'xcUSDT',
    }),
  ],
  [EvmChainId.OPTIMISM]: [
    WNATIVE[EvmChainId.OPTIMISM],
    WBTC[EvmChainId.OPTIMISM],
    USDC[EvmChainId.OPTIMISM],
    new Token({
      chainId: EvmChainId.OPTIMISM,
      address: '0x7F5c764cBc14f9669B88837ca1490cCa17c31607',
      decimals: 6,
      symbol: 'USDC',
      name: 'USD Coin (Bridged from Ethereum)',
    }),
    WstETH[EvmChainId.OPTIMISM], // #5 for other projects
    USDT[EvmChainId.OPTIMISM],
    DAI[EvmChainId.OPTIMISM],
    LUSD[EvmChainId.OPTIMISM],
    FRAX[EvmChainId.OPTIMISM],
    new Token({
      chainId: EvmChainId.OPTIMISM,
      address: '0xC84Da6c8ec7A57cD10B939E79eaF9d2D17834E04',
      decimals: 18,
      symbol: 'vUSD',
      name: 'vUSD',
    }),
    OP[EvmChainId.OPTIMISM],
  ],
  [EvmChainId.KAVA]: [
    WNATIVE[EvmChainId.KAVA],
    STARGATE_WETH[EvmChainId.KAVA],
    STARGATE_USDT[EvmChainId.KAVA],
    axlUSDC[EvmChainId.KAVA],
    axlETH[EvmChainId.KAVA],
    axlWBTC[EvmChainId.KAVA],
  ],
  [EvmChainId.METIS]: [
    WNATIVE[EvmChainId.METIS],
    WETH9[EvmChainId.METIS],
    WBTC[EvmChainId.METIS],
    USDC[EvmChainId.METIS],
    USDT[EvmChainId.METIS],
    DAI[EvmChainId.METIS],
  ],
  [EvmChainId.BOBA]: [
    WNATIVE[EvmChainId.BOBA],
    WBTC[EvmChainId.BOBA],
    USDC[EvmChainId.BOBA],
    USDT[EvmChainId.BOBA],
    DAI[EvmChainId.BOBA],
    FRAX[EvmChainId.BOBA],
  ],
  [EvmChainId.BOBA_AVAX]: [
    WNATIVE[EvmChainId.BOBA_AVAX],
    new Token({
      chainId: EvmChainId.BOBA_AVAX,
      address: '0x4200000000000000000000000000000000000023',
      decimals: 18,
      symbol: 'AVAX',
      name: 'Avax',
    }),
    USDT[EvmChainId.BOBA_AVAX],
    USDC[EvmChainId.BOBA_AVAX],
  ],
  [EvmChainId.BOBA_BNB]: [
    WNATIVE[EvmChainId.BOBA_BNB],
    new Token({
      chainId: EvmChainId.BOBA_BNB,
      address: '0x4200000000000000000000000000000000000023',
      decimals: 18,
      symbol: 'BNB',
      name: 'Binance Coin',
    }),
    USDT[EvmChainId.BOBA_BNB],
    USDC[EvmChainId.BOBA_BNB],
  ],
  [EvmChainId.BTTC]: [
    WNATIVE[EvmChainId.BTTC],
    WETH9[EvmChainId.BTTC],
    USDC[EvmChainId.BTTC],
    USDT[EvmChainId.BTTC],
  ],
  [EvmChainId.POLYGON_ZKEVM]: [
    WNATIVE[EvmChainId.POLYGON_ZKEVM],
    MATIC[EvmChainId.POLYGON_ZKEVM],
    USDC[EvmChainId.POLYGON_ZKEVM],
    USDT[EvmChainId.POLYGON_ZKEVM],
    DAI[EvmChainId.POLYGON_ZKEVM],
    WBTC[EvmChainId.POLYGON_ZKEVM],
    FRAX[EvmChainId.POLYGON_ZKEVM],
  ],
  [EvmChainId.THUNDERCORE]: [
    WNATIVE[EvmChainId.THUNDERCORE],
    WETH9[EvmChainId.THUNDERCORE],
    WBTC[EvmChainId.THUNDERCORE],
    USDC[EvmChainId.THUNDERCORE],
    USDT[EvmChainId.THUNDERCORE],
  ],
  [EvmChainId.HAQQ]: [
    WNATIVE[EvmChainId.HAQQ],
    WETH9[EvmChainId.HAQQ],
    WBTC[EvmChainId.HAQQ],
    USDC[EvmChainId.HAQQ],
    USDT[EvmChainId.HAQQ],
    DAI[EvmChainId.HAQQ],
  ],
  [EvmChainId.CORE]: [
    WNATIVE[EvmChainId.CORE],
    WETH9[EvmChainId.CORE],
    USDC[EvmChainId.CORE],
    USDT[EvmChainId.CORE],
  ],
  [EvmChainId.ZKSYNC_ERA]: [
    WNATIVE[EvmChainId.ZKSYNC_ERA],
    WBTC[EvmChainId.ZKSYNC_ERA],
    USDC[EvmChainId.ZKSYNC_ERA],
    USDT[EvmChainId.ZKSYNC_ERA],
    new Token({
      chainId: EvmChainId.ZKSYNC_ERA,
      address: '0x5A7d6b2F92C77FAD6CCaBd7EE0624E64907Eaf3E',
      decimals: 18,
      symbol: 'ZK',
      name: 'ZKsync',
    }),
    new Token({
      // real USDC (not bridged)
      chainId: EvmChainId.ZKSYNC_ERA,
      address: '0x1d17CBcF0D6D143135aE902365D2E5e2A16538D4',
      decimals: 6,
      symbol: 'USDC',
      name: 'USDC',
    }),
  ],
  [EvmChainId.LINEA]: [
    WNATIVE[EvmChainId.LINEA],
    USDC[EvmChainId.LINEA],
    USDT[EvmChainId.LINEA],
    DAI[EvmChainId.LINEA],
    WBTC[EvmChainId.LINEA],
  ],
  [EvmChainId.BASE]: [
    WNATIVE[EvmChainId.BASE],
    new Token({
      chainId: EvmChainId.BASE,
      address: '0x2Ae3F1Ec7F1F5012CFEab0185bfc7aa3cf0DEc22',
      decimals: 18,
      symbol: 'cbETH',
      name: 'Coinbase Wrapped Staked ETH',
    }),
    USDC[EvmChainId.BASE],
    WstETH[EvmChainId.BASE], // #7  for other projects
    USDT[EvmChainId.BASE], // #8  for other projects
    AERO, // #9  for other projects
    new Token({
      chainId: EvmChainId.BASE,
      address: '0xd9aAEc86B65D86f6A7B5B1b0c42FFA531710b6CA',
      decimals: 6,
      symbol: 'USDbC',
      name: 'USD Base Coin',
    }),
    axlUSDC[EvmChainId.BASE],
    DAI[EvmChainId.BASE],
    new Token({
      chainId: EvmChainId.BASE,
      address: '0xcbB7C0000aB88B473b1f5aFd9ef808440eed33Bf',
      decimals: 8,
      symbol: 'cbBTC',
      name: 'Coinbase Wrapped BTC',
    }),
    new Token({
      chainId: EvmChainId.BASE,
      address: '0x0b3e328455c4059EEb9e3f84b5543F74E24e7E1b',
      decimals: 18,
      symbol: 'VIRTUAL',
      name: 'Virtual Protocol',
    }),
  ],
  [EvmChainId.SCROLL]: [
    WNATIVE[EvmChainId.SCROLL],
    WBTC[EvmChainId.SCROLL],
    USDC[EvmChainId.SCROLL],
    USDT[EvmChainId.SCROLL],
    WstETH[EvmChainId.SCROLL],
  ],
  [EvmChainId.FILECOIN]: [
    WNATIVE[EvmChainId.FILECOIN],
    USDC[EvmChainId.FILECOIN],
    DAI[EvmChainId.FILECOIN],
  ],
  [EvmChainId.ZETACHAIN]: [
    WNATIVE[EvmChainId.ZETACHAIN],
    WETH9[EvmChainId.ZETACHAIN],
    WBTC[EvmChainId.ZETACHAIN],
    ZETA_ETH_BRIDGE_USDC,
    ZETA_ETH_BRIDGE_USDT,
    ZETA_BSC_BRIDGE_USDC,
    ZETA_BSC_BRIDGE_USDT,
  ],
  [EvmChainId.CRONOS]: [
    WNATIVE[EvmChainId.CRONOS],
    WETH9[EvmChainId.CRONOS],
    WBTC[EvmChainId.CRONOS],
    USDC[EvmChainId.CRONOS],
  ],
  [EvmChainId.BLAST]: [WNATIVE[EvmChainId.BLAST], USDB[EvmChainId.BLAST], MUSD],
  [EvmChainId.SKALE_EUROPA]: [
    SKL,
    USDT[EvmChainId.SKALE_EUROPA],
    USDC[EvmChainId.SKALE_EUROPA],
    DAI[EvmChainId.SKALE_EUROPA],
    USDP[EvmChainId.SKALE_EUROPA],
    WETH9[EvmChainId.SKALE_EUROPA],
  ],
  [EvmChainId.ROOTSTOCK]: [
    WNATIVE[EvmChainId.ROOTSTOCK],
    WETH9[EvmChainId.ROOTSTOCK],
    USDT[EvmChainId.ROOTSTOCK],
    DOC,
  ],
  [EvmChainId.MANTLE]: [
    WNATIVE[EvmChainId.MANTLE],
    WETH9[EvmChainId.MANTLE],
    USDC[EvmChainId.MANTLE],
    USDT[EvmChainId.MANTLE],
    METH[EvmChainId.MANTLE],
    new Token({
      // #3 token for other projects
      chainId: EvmChainId.MANTLE,
      address: '0x5d3a1Ff2b6BAb83b63cd9AD0787074081a52ef34',
      decimals: 18,
      symbol: 'USDe',
      name: 'USDe',
    }),
  ],
  [EvmChainId.CURTIS]: [
    WNATIVE[EvmChainId.CURTIS],
    USDT[EvmChainId.CURTIS],
    DAI[EvmChainId.CURTIS],
  ],
  [EvmChainId.MANTA]: [
    WNATIVE[EvmChainId.MANTA],
    USDC[EvmChainId.MANTA],
    USDT[EvmChainId.MANTA],
    STONE[EvmChainId.MANTA],
  ],
  [EvmChainId.MODE]: [
    WNATIVE[EvmChainId.MODE],
    USDC[EvmChainId.MODE],
    USDT[EvmChainId.MODE],
  ],
  [EvmChainId.TAIKO]: [
    WNATIVE[EvmChainId.TAIKO],
    USDC[EvmChainId.TAIKO],
    USDT[EvmChainId.TAIKO],
    DAI[EvmChainId.TAIKO],
  ],
  [EvmChainId.ZKLINK]: [
    WNATIVE[EvmChainId.ZKLINK],
    USDC[EvmChainId.ZKLINK],
    USDT[EvmChainId.ZKLINK],
    DAI[EvmChainId.ZKLINK],
  ],
  [EvmChainId.APE]: [WNATIVE[EvmChainId.APE], APE_USD, APE_ETH],
  [EvmChainId.SONIC]: [
    WNATIVE[EvmChainId.SONIC],
    USDC[EvmChainId.SONIC],
    WETH9[EvmChainId.SONIC],
  ],
  [EvmChainId.HEMI]: [
    WNATIVE[EvmChainId.HEMI],
    USDC[EvmChainId.HEMI],
    USDT[EvmChainId.HEMI],
  ],
}
