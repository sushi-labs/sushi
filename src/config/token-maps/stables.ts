import { EvmChainId } from '../../chain/evm/index.js'
import {
  APE_USD,
  BASE_BRIDGE_USDC,
  BTTC_BSC_BRIDGE_USDC,
  BTTC_BSC_BRIDGE_USDT,
  BTTC_ETHEREUM_BRIDGE_USDC,
  BTTC_ETHEREUM_BRIDGE_USDT,
  BTTC_TRON_BRIDGE_USDC,
  BTTC_TRON_BRIDGE_USDT,
  BUSD,
  DAI,
  DOC,
  FILECOIN_CELER_BRIDGE_USDC,
  FILECOIN_CELER_BRIDGE_USDT,
  FRAX,
  LUSD,
  MIM,
  MUSD,
  OPTICS_USDC,
  THUNDERCORE_ANY_BUSD,
  THUNDERCORE_ANY_USDC,
  THUNDERCORE_ANY_USDT,
  Token,
  USDB,
  USDC,
  USDP,
  USDT,
  USD_PLUS,
  WORMHOLE_USDC,
  ZETA_BSC_BRIDGE_USDC,
  ZETA_BSC_BRIDGE_USDT,
  ZETA_ETH_BRIDGE_USDC,
  ZETA_ETH_BRIDGE_USDT,
  axlUSDC,
} from '../../currency/index.js'
import { STARGATE_USDC, STARGATE_USDT } from '../features/stargate.js'

export const STABLES = {
  [EvmChainId.ARBITRUM]: [
    USDC[EvmChainId.ARBITRUM],
    USDT[EvmChainId.ARBITRUM],
    DAI[EvmChainId.ARBITRUM],
    FRAX[EvmChainId.ARBITRUM],
    axlUSDC[EvmChainId.ARBITRUM],
  ],
  [EvmChainId.ARBITRUM_NOVA]: [
    USDC[EvmChainId.ARBITRUM_NOVA],
    USDT[EvmChainId.ARBITRUM_NOVA],
    DAI[EvmChainId.ARBITRUM_NOVA],
  ],
  [EvmChainId.AVALANCHE]: [
    USDC[EvmChainId.AVALANCHE],
    USDT[EvmChainId.AVALANCHE],
    DAI[EvmChainId.AVALANCHE],
    MIM[EvmChainId.AVALANCHE],
    FRAX[EvmChainId.AVALANCHE],
    axlUSDC[EvmChainId.AVALANCHE],
  ],
  [EvmChainId.BASE]: [
    USDC[EvmChainId.BASE],
    DAI[EvmChainId.BASE],
    axlUSDC[EvmChainId.BASE],
    USD_PLUS[EvmChainId.BASE],
    BASE_BRIDGE_USDC,
  ],
  [EvmChainId.BOBA]: [
    USDC[EvmChainId.BOBA],
    USDT[EvmChainId.BOBA],
    DAI[EvmChainId.BOBA],
  ],
  [EvmChainId.BOBA_AVAX]: [
    USDC[EvmChainId.BOBA_AVAX],
    USDT[EvmChainId.BOBA_AVAX],
  ],
  [EvmChainId.BOBA_BNB]: [USDC[EvmChainId.BOBA_BNB], USDT[EvmChainId.BOBA_BNB]],
  [EvmChainId.BSC]: [
    USDC[EvmChainId.BSC],
    USDT[EvmChainId.BSC],
    BUSD[EvmChainId.BSC],
    DAI[EvmChainId.BSC],
    //MIM[EvmChainId.BSC],
    FRAX[EvmChainId.BSC],
    axlUSDC[EvmChainId.BSC],
  ],
  [EvmChainId.BTTC]: [
    USDC[EvmChainId.BTTC],
    USDT[EvmChainId.BTTC],
    BTTC_BSC_BRIDGE_USDC,
    BTTC_ETHEREUM_BRIDGE_USDC,
    BTTC_TRON_BRIDGE_USDC,
    BTTC_BSC_BRIDGE_USDT,
    BTTC_ETHEREUM_BRIDGE_USDT,
    BTTC_TRON_BRIDGE_USDT,
  ],
  [EvmChainId.CELO]: [
    USDC[EvmChainId.CELO],
    USDT[EvmChainId.CELO],
    DAI[EvmChainId.CELO],
    OPTICS_USDC[EvmChainId.CELO],
    axlUSDC[EvmChainId.CELO],
  ],
  [EvmChainId.ETHEREUM]: [
    USDC[EvmChainId.ETHEREUM],
    USDT[EvmChainId.ETHEREUM],
    DAI[EvmChainId.ETHEREUM],
    LUSD[EvmChainId.ETHEREUM],
    MIM[EvmChainId.ETHEREUM],
    FRAX[EvmChainId.ETHEREUM],
  ],
  [EvmChainId.FANTOM]: [
    axlUSDC[EvmChainId.FANTOM],
    STARGATE_USDC[EvmChainId.FANTOM],
    STARGATE_USDT[EvmChainId.FANTOM],
    MIM[EvmChainId.FANTOM],
    FRAX[EvmChainId.FANTOM],
  ],
  [EvmChainId.FILECOIN]: [
    USDC[EvmChainId.FILECOIN],
    DAI[EvmChainId.FILECOIN],
    FILECOIN_CELER_BRIDGE_USDC,
    FILECOIN_CELER_BRIDGE_USDT,
  ],
  [EvmChainId.FUSE]: [
    USDC[EvmChainId.FUSE],
    USDT[EvmChainId.FUSE],
    DAI[EvmChainId.FUSE],
  ],
  [EvmChainId.GNOSIS]: [
    USDC[EvmChainId.GNOSIS],
    USDT[EvmChainId.GNOSIS],
    DAI[EvmChainId.GNOSIS],
  ],
  [EvmChainId.HARMONY]: [
    USDC[EvmChainId.HARMONY],
    USDT[EvmChainId.HARMONY],
    DAI[EvmChainId.HARMONY],
    FRAX[EvmChainId.HARMONY],
  ],
  [EvmChainId.HAQQ]: [
    USDC[EvmChainId.HAQQ],
    USDT[EvmChainId.HAQQ],
    DAI[EvmChainId.HAQQ],
  ],
  [EvmChainId.HECO]: [
    USDC[EvmChainId.HECO],
    USDT[EvmChainId.HECO],
    DAI[EvmChainId.HECO],
  ],
  [EvmChainId.KAVA]: [axlUSDC[EvmChainId.KAVA], USDT[EvmChainId.KAVA]],
  [EvmChainId.LINEA]: [
    USDC[EvmChainId.LINEA],
    axlUSDC[EvmChainId.LINEA],
    DAI[EvmChainId.LINEA],
  ],
  [EvmChainId.METIS]: [
    USDC[EvmChainId.METIS],
    USDT[EvmChainId.METIS],
    DAI[EvmChainId.METIS],
  ],
  [EvmChainId.MOONBEAM]: [
    WORMHOLE_USDC[EvmChainId.MOONBEAM],
    axlUSDC[EvmChainId.MOONBEAM],
    FRAX[EvmChainId.MOONBEAM],
    new Token({
      chainId: EvmChainId.MOONBEAM,
      address: '0xFFfffffF7D2B0B761Af01Ca8e25242976ac0aD7D',
      decimals: 6,
      name: 'USD Coin',
      symbol: 'xcUSDC',
    }),
    new Token({
      chainId: EvmChainId.MOONBEAM,
      address: '0xFFFFFFfFea09FB06d082fd1275CD48b191cbCD1d',
      decimals: 6,
      name: 'Tether USD',
      symbol: 'xcUSDT',
    }),
  ],
  [EvmChainId.MOONRIVER]: [
    USDC[EvmChainId.MOONRIVER],
    USDT[EvmChainId.MOONRIVER],
    DAI[EvmChainId.MOONRIVER],
    MIM[EvmChainId.MOONRIVER],
    FRAX[EvmChainId.MOONRIVER],
  ],
  [EvmChainId.OKEX]: [
    USDC[EvmChainId.OKEX],
    USDT[EvmChainId.OKEX],
    DAI[EvmChainId.OKEX],
  ],
  [EvmChainId.OPTIMISM]: [
    USDC[EvmChainId.OPTIMISM],
    USDT[EvmChainId.OPTIMISM],
    DAI[EvmChainId.OPTIMISM],
    FRAX[EvmChainId.OPTIMISM],
    axlUSDC[EvmChainId.OPTIMISM],
  ],
  [EvmChainId.POLYGON]: [
    USDC[EvmChainId.POLYGON],
    USDT[EvmChainId.POLYGON],
    DAI[EvmChainId.POLYGON],
    MIM[EvmChainId.POLYGON],
    FRAX[EvmChainId.POLYGON],
    axlUSDC[EvmChainId.POLYGON],
  ],
  [EvmChainId.POLYGON_ZKEVM]: [
    USDC[EvmChainId.POLYGON_ZKEVM],
    USDT[EvmChainId.POLYGON_ZKEVM],
    DAI[EvmChainId.POLYGON_ZKEVM],
  ],
  [EvmChainId.SCROLL]: [
    USDC[EvmChainId.SCROLL],
    USDT[EvmChainId.SCROLL],
    DAI[EvmChainId.SCROLL],
    axlUSDC[EvmChainId.SCROLL],
  ],
  [EvmChainId.TELOS]: [USDC[EvmChainId.TELOS], USDT[EvmChainId.TELOS]],
  [EvmChainId.THUNDERCORE]: [
    USDC[EvmChainId.THUNDERCORE],
    USDT[EvmChainId.THUNDERCORE],
    BUSD[EvmChainId.THUNDERCORE],
    THUNDERCORE_ANY_BUSD,
    THUNDERCORE_ANY_USDT,
    THUNDERCORE_ANY_USDC,
  ],
  [EvmChainId.CORE]: [USDC[EvmChainId.CORE], USDT[EvmChainId.CORE]],
  [EvmChainId.ZETACHAIN]: [
    ZETA_BSC_BRIDGE_USDC,
    ZETA_BSC_BRIDGE_USDT,
    ZETA_ETH_BRIDGE_USDC,
    ZETA_ETH_BRIDGE_USDT,
  ],
  [EvmChainId.CRONOS]: [USDC[EvmChainId.CRONOS]],
  [EvmChainId.BLAST]: [USDB[EvmChainId.BLAST], MUSD],
  [EvmChainId.SKALE_EUROPA]: [
    USDC[EvmChainId.SKALE_EUROPA],
    USDT[EvmChainId.SKALE_EUROPA],
    DAI[EvmChainId.SKALE_EUROPA],
    USDP[EvmChainId.SKALE_EUROPA],
  ],
  [EvmChainId.ROOTSTOCK]: [
    USDT[EvmChainId.ROOTSTOCK],
    DAI[EvmChainId.ROOTSTOCK],
    DOC,
  ],
  [EvmChainId.MANTLE]: [USDC[EvmChainId.MANTLE]],
  [EvmChainId.PALM]: [],
  [EvmChainId.ZKSYNC_ERA]: [
    USDC[EvmChainId.ZKSYNC_ERA],
    USDT[EvmChainId.ZKSYNC_ERA],
  ],
  [EvmChainId.MANTA]: [USDC[EvmChainId.MANTA], USDT[EvmChainId.MANTA]],
  [EvmChainId.MODE]: [USDC[EvmChainId.MODE], USDT[EvmChainId.MODE]],
  [EvmChainId.TAIKO]: [
    USDC[EvmChainId.TAIKO],
    USDT[EvmChainId.TAIKO],
    DAI[EvmChainId.TAIKO],
  ],
  [EvmChainId.ZKLINK]: [
    USDC[EvmChainId.ZKLINK],
    USDT[EvmChainId.ZKLINK],
    DAI[EvmChainId.ZKLINK],
  ],
  [EvmChainId.APE]: [APE_USD],
  [EvmChainId.SONIC]: [USDC[EvmChainId.SONIC]],
  [EvmChainId.HEMI]: [USDC[EvmChainId.HEMI], USDT[EvmChainId.HEMI]],
  // TESTNETS
  // [EvmChainId.RINKEBY]: [USDC[EvmChainId.RINKEBY]],
  // [EvmChainId.ROPSTEN]: [
  //   USDC[EvmChainId.ROPSTEN],
  //   USDT[EvmChainId.ROPSTEN],
  //   DAI[EvmChainId.ROPSTEN],
  // ],
  // [EvmChainId.KOVAN]: [
  //   USDC[EvmChainId.KOVAN],
  //   USDT[EvmChainId.KOVAN],
  //   DAI[EvmChainId.KOVAN],
  // ],
  [EvmChainId.POLYGON_TESTNET]: [USDC[EvmChainId.POLYGON_TESTNET]],
  [EvmChainId.FANTOM_TESTNET]: [],
  [EvmChainId.BSC_TESTNET]: [],
  [EvmChainId.ARBITRUM_TESTNET]: [],
  [EvmChainId.AVALANCHE_TESTNET]: [],
  [EvmChainId.SEPOLIA]: [],
  [EvmChainId.GÃ–RLI]: [],
  [EvmChainId.CURTIS]: [USDT[EvmChainId.CURTIS], DAI[EvmChainId.CURTIS]],
} as const satisfies Record<EvmChainId, Token[]>
