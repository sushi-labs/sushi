import { getAddress as _getAddress } from 'viem/utils'
import { EvmChainId } from '../../chain/evm/index.js'
import {
  APE_USD,
  ARB,
  DAI,
  FRAX,
  GNO,
  MATIC,
  MIM,
  Native,
  SKL,
  SUSHI,
  Token,
  USDB,
  USDC,
  USDT,
  WBTC,
  WETH9,
  WNATIVE,
  WORMHOLE_USDC,
  WORMHOLE_WBTC,
  WORMHOLE_WETH,
  ZETA_ETH_BRIDGE_USDC,
  ZETA_ETH_BRIDGE_USDT,
  axlDAI,
  axlETH,
  axlUSDC,
  axlUSDT,
  axlWBTC,
} from '../../currency/index.js'
import {
  STARGATE_USDC,
  STARGATE_USDT,
  STARGATE_WBTC,
  STARGATE_WETH,
} from '../features/stargate.js'

/*
  Currencies that are shown at the top of the token selector by default
*/
export const EVM_DEFAULT_BASES = {
  [EvmChainId.ETHEREUM]: [
    Native.onChain(EvmChainId.ETHEREUM),
    WNATIVE[EvmChainId.ETHEREUM],
    SUSHI[EvmChainId.ETHEREUM],
    WBTC[EvmChainId.ETHEREUM],
    USDC[EvmChainId.ETHEREUM],
    USDT[EvmChainId.ETHEREUM],
    DAI[EvmChainId.ETHEREUM],
  ],
  [EvmChainId.SEPOLIA]: [
    Native.onChain(EvmChainId.SEPOLIA),
    WNATIVE[EvmChainId.SEPOLIA],
    USDC[EvmChainId.SEPOLIA],
  ],
  // [EvmChainId.ROPSTEN]: [],
  // [EvmChainId.RINKEBY]: [],
  [EvmChainId.GÃ–RLI]: [],
  // [EvmChainId.KOVAN]: [],
  [EvmChainId.GNOSIS]: [
    Native.onChain(EvmChainId.GNOSIS),
    WNATIVE[EvmChainId.GNOSIS],
    GNO[EvmChainId.GNOSIS],
    WETH9[EvmChainId.GNOSIS],
    USDC[EvmChainId.GNOSIS],
    USDT[EvmChainId.GNOSIS],
    DAI[EvmChainId.GNOSIS],
  ],
  [EvmChainId.BSC]: [
    Native.onChain(EvmChainId.BSC),
    WNATIVE[EvmChainId.BSC],
    WETH9[EvmChainId.BSC],
    USDC[EvmChainId.BSC],
    USDT[EvmChainId.BSC],
    DAI[EvmChainId.BSC],
  ],
  [EvmChainId.BSC_TESTNET]: [],
  [EvmChainId.POLYGON]: [
    Native.onChain(EvmChainId.POLYGON),
    WNATIVE[EvmChainId.POLYGON],
    WBTC[EvmChainId.POLYGON],
    WETH9[EvmChainId.POLYGON],
    USDC[EvmChainId.POLYGON],
    USDT[EvmChainId.POLYGON],
    DAI[EvmChainId.POLYGON],
  ],
  [EvmChainId.POLYGON_TESTNET]: [],
  [EvmChainId.AVALANCHE]: [
    Native.onChain(EvmChainId.AVALANCHE),
    WNATIVE[EvmChainId.AVALANCHE],
    WETH9[EvmChainId.AVALANCHE],
    WBTC[EvmChainId.AVALANCHE],
    USDC[EvmChainId.AVALANCHE],
    USDT[EvmChainId.AVALANCHE],
    DAI[EvmChainId.AVALANCHE],
    MIM[EvmChainId.AVALANCHE],
    FRAX[EvmChainId.AVALANCHE],
  ],
  [EvmChainId.AVALANCHE_TESTNET]: [],
  [EvmChainId.ARBITRUM_NOVA]: [
    Native.onChain(EvmChainId.ARBITRUM_NOVA),
    WNATIVE[EvmChainId.ARBITRUM_NOVA],
    ARB[EvmChainId.ARBITRUM_NOVA],
    WBTC[EvmChainId.ARBITRUM_NOVA],
    USDC[EvmChainId.ARBITRUM_NOVA],
    USDT[EvmChainId.ARBITRUM_NOVA],
    DAI[EvmChainId.ARBITRUM_NOVA],
  ],
  [EvmChainId.BOBA]: [
    Native.onChain(EvmChainId.BOBA),
    WNATIVE[EvmChainId.BOBA],
    USDC[EvmChainId.BOBA],
    USDT[EvmChainId.BOBA],
    DAI[EvmChainId.BOBA],
    FRAX[EvmChainId.BOBA],
    WBTC[EvmChainId.BOBA],
  ],
  [EvmChainId.FANTOM]: [
    Native.onChain(EvmChainId.FANTOM),
    WNATIVE[EvmChainId.FANTOM],
    axlUSDC[EvmChainId.FANTOM],
    STARGATE_USDC[EvmChainId.FANTOM],
    STARGATE_USDT[EvmChainId.FANTOM],
    STARGATE_WETH[EvmChainId.FANTOM],
    STARGATE_WBTC[EvmChainId.FANTOM],
    axlUSDC[EvmChainId.FANTOM],
    MIM[EvmChainId.FANTOM],
  ],
  [EvmChainId.FANTOM_TESTNET]: [],
  [EvmChainId.ARBITRUM]: [
    Native.onChain(EvmChainId.ARBITRUM),
    WNATIVE[EvmChainId.ARBITRUM],
    ARB[EvmChainId.ARBITRUM],
    WBTC[EvmChainId.ARBITRUM],
    USDC[EvmChainId.ARBITRUM],
    USDT[EvmChainId.ARBITRUM],
    DAI[EvmChainId.ARBITRUM],
    MIM[EvmChainId.ARBITRUM],
  ],
  [EvmChainId.ARBITRUM_TESTNET]: [],
  [EvmChainId.HARMONY]: [
    Native.onChain(EvmChainId.HARMONY),
    WNATIVE[EvmChainId.HARMONY],
    WETH9[EvmChainId.HARMONY],
    USDC[EvmChainId.HARMONY],
    USDT[EvmChainId.HARMONY],
    DAI[EvmChainId.HARMONY],
  ],
  // [EvmChainId.HARMONY_TESTNET]: [],
  [EvmChainId.HECO]: [
    Native.onChain(EvmChainId.HECO),
    WNATIVE[EvmChainId.HECO],
    WETH9[EvmChainId.HECO],
    USDC[EvmChainId.HECO],
    USDT[EvmChainId.HECO],
    DAI[EvmChainId.HECO],
  ],
  // [EvmChainId.HECO_TESTNET]: [],
  [EvmChainId.OKEX]: [
    Native.onChain(EvmChainId.OKEX),
    WNATIVE[EvmChainId.OKEX],
    WETH9[EvmChainId.OKEX],
    USDC[EvmChainId.OKEX],
    USDT[EvmChainId.OKEX],
    DAI[EvmChainId.OKEX],
  ],
  // [EvmChainId.OKEX_TESTNET]: [],
  [EvmChainId.CELO]: [
    Native.onChain(EvmChainId.CELO),
    // WNATIVE[EvmChainId.CELO],
    WETH9[EvmChainId.CELO],
    USDC[EvmChainId.CELO],
    USDT[EvmChainId.CELO],
    DAI[EvmChainId.CELO],
  ],
  [EvmChainId.PALM]: [
    Native.onChain(EvmChainId.PALM),
    WNATIVE[EvmChainId.PALM],
    WETH9[EvmChainId.PALM],
  ],
  [EvmChainId.MOONRIVER]: [
    Native.onChain(EvmChainId.MOONRIVER),
    WNATIVE[EvmChainId.MOONRIVER],
    WETH9[EvmChainId.MOONRIVER],
    USDC[EvmChainId.MOONRIVER],
    USDT[EvmChainId.MOONRIVER],
    DAI[EvmChainId.MOONRIVER],
    FRAX[EvmChainId.MOONRIVER],
  ],
  [EvmChainId.FUSE]: [
    Native.onChain(EvmChainId.FUSE),
    WNATIVE[EvmChainId.FUSE],
    WBTC[EvmChainId.FUSE],
    WETH9[EvmChainId.FUSE],
    USDC[EvmChainId.FUSE],
    USDT[EvmChainId.FUSE],
    DAI[EvmChainId.FUSE],
  ],
  [EvmChainId.TELOS]: [
    Native.onChain(EvmChainId.TELOS),
    WNATIVE[EvmChainId.TELOS],
    WETH9[EvmChainId.TELOS],
    USDC[EvmChainId.TELOS],
    USDT[EvmChainId.TELOS],
  ],
  [EvmChainId.MOONBEAM]: [
    Native.onChain(EvmChainId.MOONBEAM),
    WNATIVE[EvmChainId.MOONBEAM],
    axlUSDC[EvmChainId.MOONBEAM],
    WORMHOLE_USDC[EvmChainId.MOONBEAM],
    WORMHOLE_WETH[EvmChainId.MOONBEAM],
    WORMHOLE_WBTC[EvmChainId.MOONBEAM],
  ],
  [EvmChainId.OPTIMISM]: [
    Native.onChain(EvmChainId.OPTIMISM),
    WNATIVE[EvmChainId.OPTIMISM],
    WBTC[EvmChainId.OPTIMISM],
    USDC[EvmChainId.OPTIMISM],
    USDT[EvmChainId.OPTIMISM],
    DAI[EvmChainId.OPTIMISM],
  ],
  [EvmChainId.KAVA]: [
    Native.onChain(EvmChainId.KAVA),
    WNATIVE[EvmChainId.KAVA],
    axlWBTC[EvmChainId.KAVA],
    STARGATE_WETH[EvmChainId.KAVA],
    axlUSDC[EvmChainId.KAVA],
    USDT[EvmChainId.KAVA],
  ],
  [EvmChainId.METIS]: [
    Native.onChain(EvmChainId.METIS),
    WNATIVE[EvmChainId.METIS],
    WBTC[EvmChainId.METIS],
    WETH9[EvmChainId.METIS],
    USDC[EvmChainId.METIS],
    USDT[EvmChainId.METIS],
    DAI[EvmChainId.METIS],
  ],
  [EvmChainId.BOBA_AVAX]: [
    Native.onChain(EvmChainId.BOBA_AVAX),
    WNATIVE[EvmChainId.BOBA_AVAX],
    USDC[EvmChainId.BOBA_AVAX],
    USDT[EvmChainId.BOBA_AVAX],
  ],
  [EvmChainId.BOBA_BNB]: [
    Native.onChain(EvmChainId.BOBA_BNB),
    WNATIVE[EvmChainId.BOBA_BNB],
    new Token({
      chainId: EvmChainId.BOBA_BNB,
      symbol: 'BNB',
      name: 'Binance Coin',
      decimals: 18,
      address: '0x4200000000000000000000000000000000000023',
    }),
    USDC[EvmChainId.BOBA_BNB],
    USDT[EvmChainId.BOBA_BNB],
  ],
  [EvmChainId.BTTC]: [
    Native.onChain(EvmChainId.BTTC),
    WNATIVE[EvmChainId.BTTC],
    WETH9[EvmChainId.BTTC],
    USDC[EvmChainId.BTTC],
    USDT[EvmChainId.BTTC],
  ],
  // [EvmChainId.CONSENSUS_ZKEVM_TESTNET]: [
  //   Native.onChain(EvmChainId.CONSENSUS_ZKEVM_TESTNET),
  //   WNATIVE[EvmChainId.CONSENSUS_ZKEVM_TESTNET],
  // ],
  // [EvmChainId.SCROLL_ALPHA_TESTNET]: [Native.onChain(EvmChainId.SCROLL_ALPHA_TESTNET), WNATIVE[EvmChainId.SCROLL_ALPHA_TESTNET]],
  // [EvmChainId.BASE_TESTNET]: [Native.onChain(EvmChainId.BASE_TESTNET), WNATIVE[EvmChainId.BASE_TESTNET]],
  [EvmChainId.POLYGON_ZKEVM]: [
    Native.onChain(EvmChainId.POLYGON_ZKEVM),
    WNATIVE[EvmChainId.POLYGON_ZKEVM],
    MATIC[EvmChainId.POLYGON_ZKEVM],
    USDC[EvmChainId.POLYGON_ZKEVM],
    USDT[EvmChainId.POLYGON_ZKEVM],
    DAI[EvmChainId.POLYGON_ZKEVM],
    WBTC[EvmChainId.POLYGON_ZKEVM],
  ],
  [EvmChainId.THUNDERCORE]: [
    Native.onChain(EvmChainId.THUNDERCORE),
    WNATIVE[EvmChainId.THUNDERCORE],
    WETH9[EvmChainId.THUNDERCORE],
    USDC[EvmChainId.THUNDERCORE],
    USDT[EvmChainId.THUNDERCORE],
    WBTC[EvmChainId.THUNDERCORE],
  ],
  [EvmChainId.HAQQ]: [
    Native.onChain(EvmChainId.HAQQ),
    WNATIVE[EvmChainId.HAQQ],
    axlETH[EvmChainId.HAQQ],
    axlWBTC[EvmChainId.HAQQ],
    axlUSDC[EvmChainId.HAQQ],
    axlUSDT[EvmChainId.HAQQ],
    axlDAI[EvmChainId.HAQQ],
  ],
  [EvmChainId.CORE]: [
    Native.onChain(EvmChainId.CORE),
    WNATIVE[EvmChainId.CORE],
    WETH9[EvmChainId.CORE],
    USDC[EvmChainId.CORE],
    USDT[EvmChainId.CORE],
  ],
  [EvmChainId.ZKSYNC_ERA]: [
    Native.onChain(EvmChainId.ZKSYNC_ERA),
    WNATIVE[EvmChainId.ZKSYNC_ERA],
    WBTC[EvmChainId.ZKSYNC_ERA],
    USDC[EvmChainId.ZKSYNC_ERA],
  ],
  [EvmChainId.LINEA]: [
    Native.onChain(EvmChainId.LINEA),
    WNATIVE[EvmChainId.LINEA],
    DAI[EvmChainId.LINEA],
    USDC[EvmChainId.LINEA],
  ],
  [EvmChainId.BASE]: [
    Native.onChain(EvmChainId.BASE),
    WNATIVE[EvmChainId.BASE],
    DAI[EvmChainId.BASE],
    new Token({
      chainId: EvmChainId.BASE,
      symbol: 'USDbC',
      name: 'USD Base Coin',
      decimals: 6,
      address: '0xd9aAEc86B65D86f6A7B5B1b0c42FFA531710b6CA',
    }),
    USDC[EvmChainId.BASE],
    new Token({
      chainId: EvmChainId.BASE,
      symbol: 'OX',
      name: 'OX Coin',
      decimals: 18,
      address: '0xba0Dda8762C24dA9487f5FA026a9B64b695A07Ea',
    }),
  ],
  [EvmChainId.SCROLL]: [
    Native.onChain(EvmChainId.SCROLL),
    WNATIVE[EvmChainId.SCROLL],
    USDC[EvmChainId.SCROLL],
    USDT[EvmChainId.SCROLL],
    WBTC[EvmChainId.SCROLL],
  ],
  [EvmChainId.FILECOIN]: [
    Native.onChain(EvmChainId.FILECOIN),
    WNATIVE[EvmChainId.FILECOIN],
    USDC[EvmChainId.FILECOIN],
    DAI[EvmChainId.FILECOIN],
  ],
  [EvmChainId.ZETACHAIN]: [
    Native.onChain(EvmChainId.ZETACHAIN),
    WNATIVE[EvmChainId.ZETACHAIN],
    ZETA_ETH_BRIDGE_USDC,
    ZETA_ETH_BRIDGE_USDT,
    WETH9[EvmChainId.ZETACHAIN],
  ],
  [EvmChainId.CRONOS]: [
    Native.onChain(EvmChainId.CRONOS),
    WNATIVE[EvmChainId.CRONOS],
    WETH9[EvmChainId.CRONOS],
    WBTC[EvmChainId.CRONOS],
    USDC[EvmChainId.CRONOS],
  ],
  [EvmChainId.BLAST]: [
    Native.onChain(EvmChainId.BLAST),
    USDB[EvmChainId.BLAST],
  ],
  [EvmChainId.SKALE_EUROPA]: [
    SKL,
    USDC[EvmChainId.SKALE_EUROPA],
    WETH9[EvmChainId.SKALE_EUROPA],
  ],
  [EvmChainId.ROOTSTOCK]: [
    Native.onChain(EvmChainId.ROOTSTOCK),
    WNATIVE[EvmChainId.ROOTSTOCK],
    WETH9[EvmChainId.ROOTSTOCK],
    USDT[EvmChainId.ROOTSTOCK],
  ],
  [EvmChainId.MANTLE]: [
    Native.onChain(EvmChainId.MANTLE),
    WNATIVE[EvmChainId.MANTLE],
    WETH9[EvmChainId.MANTLE],
    USDC[EvmChainId.MANTLE],
  ],
  [EvmChainId.CURTIS]: [
    Native.onChain(EvmChainId.CURTIS),
    WNATIVE[EvmChainId.CURTIS],
  ],
  [EvmChainId.MANTA]: [
    Native.onChain(EvmChainId.MANTA),
    WNATIVE[EvmChainId.MANTA],
    USDC[EvmChainId.MANTA],
    USDT[EvmChainId.MANTA],
    WBTC[EvmChainId.MANTA],
  ],
  [EvmChainId.MODE]: [
    Native.onChain(EvmChainId.MODE),
    WNATIVE[EvmChainId.MODE],
    USDC[EvmChainId.MODE],
    USDT[EvmChainId.MODE],
    WBTC[EvmChainId.MODE],
  ],
  [EvmChainId.TAIKO]: [
    Native.onChain(EvmChainId.TAIKO),
    WNATIVE[EvmChainId.TAIKO],
    USDC[EvmChainId.TAIKO],
    USDT[EvmChainId.TAIKO],
    DAI[EvmChainId.TAIKO],
    WBTC[EvmChainId.TAIKO],
  ],
  [EvmChainId.ZKLINK]: [
    Native.onChain(EvmChainId.ZKLINK),
    WNATIVE[EvmChainId.ZKLINK],
    USDC[EvmChainId.ZKLINK],
    USDT[EvmChainId.ZKLINK],
    DAI[EvmChainId.ZKLINK],
    WBTC[EvmChainId.ZKLINK],
  ],
  [EvmChainId.APE]: [
    Native.onChain(EvmChainId.APE),
    WNATIVE[EvmChainId.APE],
    APE_USD,
  ],
  [EvmChainId.SONIC]: [
    Native.onChain(EvmChainId.SONIC),
    WNATIVE[EvmChainId.SONIC],
    USDC[EvmChainId.SONIC],
    WETH9[EvmChainId.SONIC],
  ],
  [EvmChainId.HEMI]: [
    Native.onChain(EvmChainId.HEMI),
    WNATIVE[EvmChainId.HEMI],
    USDC[EvmChainId.HEMI],
    USDT[EvmChainId.HEMI],
  ],
  // [ChainId.SEPOLIA]: [Native.onChain(ChainId.SEPOLIA), WNATIVE[ChainId.SEPOLIA]],
} as const satisfies Record<EvmChainId, Readonly<(Token | Native)[]>>

// const DEFAULT_BASES_IDS = Object.entries(DEFAULT_BASES).reduce<
//   Record<string, string[]>
// >((acc, [chain, tokens]) => {
//   const chainId = chain
//   acc[chainId] = Array.from(new Set(tokens.map((token)
